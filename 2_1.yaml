name: three equal lengths
source code: |-
  input: '111222'
  blank: ' '
  start state: q0
  table:
    # Рассматрваем первый 0
    q0: 
      # не помеченный 0, помечаем, начинаем искать 1
      0: {write: a, R: q1} 
      # помеченная 1, начинаем сканировать
      b: {R: scan}        
      # если каретка стоит на пустом символе, считаем, что получили пустое слово, оно принадлежит языку
      ' ': {write: T, R: accept} 
      # если встречаем другой символ, не принимаем слово, т.к. считаем, что в начале нет 0 
      [1,2,a,b,c]: {write: F, R: decline} 
    
    # помечаем ближайшую 1
    q1:   
      [0,b]: R              # пропускаем немеченные 0 и помеченные 1
      1: {write: b, R: q2}  # помечаем 1, ищем 2
    
    # ищем ближайшую 2
    q2:
      [1,c]: R              # пропускаем немеченные 1 и помеченные 2
      2: {write: c, L: back}# помечаем 2, возвращаемся
    
    # возвращаемся
    back:
      [0,b,1,c]: L
      a: {R: q0}  # начианем заново помечать тройки
      
    # сканирование
    scan:
      [b,c]: R    # пропускаем помеченные 1 и 2
      [0,1,2,a]: {write: F, R: decline}  # для них нет троек, слово не проходит
      ' ': {write: T, R: accept} # просканировали всё слово, оно проходит
    accept:
      ' ': L
    decline: 
      [0,1,2,a,b,c,' ']: L
positions:
  q0: {x: 356.65, y: 260.22, fixed: false}
  q1: {x: 496.43, y: 306.79, fixed: false}
  q2: {x: 515.93, y: 447.28, fixed: false}
  back: {x: 400, y: 370}
  scan: {x: 320, y: 150}
  accept: {x: 480, y: 150}
  decline: {x: 459.3, y: 184.34, fixed: false}